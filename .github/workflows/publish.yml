name: Publish

on:
  push:
    branches:
      - 'develop'

jobs:
  development:
    runs-on: ubuntu-latest
    environment: 'development'
    if: ${{ github.ref == 'refs/heads/develop' && github.repository == 'BitPatty/RaceAnnouncerBot' && !contains(github.event.head_commit.message, '[skip ci]') }}
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${{ github.sha }} | cut -c1-8`" >> $GITHUB_ENV
      - name: Extract version info
        run: |
          PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\", ]//g')
          echo "IMAGE_NAME=ghcr.io/bitpatty/race-announcer-bot${IMAGE_POSTFIX}:${PACKAGE_VERSION}-${{ env.SHORT_SHA }}" >> $GITHUB_ENV
          echo "Using Version: ${PACKAGE_VERSION}"
      - name: Create a new build
        run: docker build -t "${{ env.IMAGE_NAME }}" -f ./dockerfiles/Production.Dockerfile .
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push Image to registry
        run: docker push ${{ env.IMAGE_NAME }}

  production:
    runs-on: ubuntu-latest
    environment: 'production'
    if: ${{ github.ref == 'refs/heads/master' && github.repository == 'BitPatty/RaceAnnouncerBot' && !contains(github.event.head_commit.message, '[skip ci]') }}
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Extract version info
        run: |
          PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\", ]//g')
          echo "IMAGE_NAME=ghcr.io/bitpatty/race-announcer-bot:${PACKAGE_VERSION}" >> $GITHUB_ENV
          echo "Using Version: ${PACKAGE_VERSION}"
      - name: Create a new build
        run: docker build -t "${{ env.IMAGE_NAME }}" -f ./dockerfiles/Production.Dockerfile .
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push Image to registry
        run: docker push ${{ env.IMAGE_NAME }}
